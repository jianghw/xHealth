package com.kaurihealth.kaurihealth.referrals_v;

import android.content.ActivityNotFoundException;
import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.widget.EditText;
import android.widget.TextView;

import com.kaurihealth.chatlib.event.SickCardMessageEvent;
import com.kaurihealth.chatlib.utils.LCIMConstants;
import com.kaurihealth.datalib.request_bean.bean.PatientListReferralBean;
import com.kaurihealth.datalib.request_bean.bean.PatientRequestReferralDoctorDisplayBean;
import com.kaurihealth.datalib.request_bean.bean.PatientRequestReferralPatientDisplayBean;
import com.kaurihealth.datalib.response_bean.DoctorRelationshipBean;
import com.kaurihealth.datalib.response_bean.MainPagePatientDisplayBean;
import com.kaurihealth.datalib.response_bean.ResponseDisplayBean;
import com.kaurihealth.kaurihealth.R;
import com.kaurihealth.kaurihealth.base_v.BaseActivity;
import com.kaurihealth.kaurihealth.eventbus.ReferralPatientReasonEvent;
import com.kaurihealth.kaurihealth.eventbus.ReferralReasonEvent;
import com.kaurihealth.kaurihealth.tinker.SampleApplicationLike;
import com.kaurihealth.mvplib.patient_p.IReferralReasonView;
import com.kaurihealth.mvplib.patient_p.ReferralReasonPresenter;
import com.kaurihealth.utilslib.ValidatorUtils;
import com.kaurihealth.utilslib.constant.Global;
import com.mobsandgeeks.saripaar.ValidationError;
import com.mobsandgeeks.saripaar.Validator;
import com.mobsandgeeks.saripaar.annotation.NotEmpty;

import org.greenrobot.eventbus.EventBus;
import org.greenrobot.eventbus.Subscribe;
import org.greenrobot.eventbus.ThreadMode;

import java.util.ArrayList;
import java.util.List;

import javax.inject.Inject;

import butterknife.Bind;
import butterknife.OnClick;

/**
 * Created by mip on 2016/10/25.
 * 转诊原帖由
 */

public class ReferralReasonActivity extends BaseActivity implements IReferralReasonView, Validator.ValidationListener {
    @Inject
    ReferralReasonPresenter<IReferralReasonView> mPresenter;

    @Bind(R.id.tv_more)
    TextView tv_more;

    @Bind(R.id.edt_referral_reason)
    @NotEmpty(message = "请输入转诊原因")
    EditText edt_referral_reason;

    private int doctorPatientRelationshipId;
    private List<Integer> doctorIdlist;
    private int patientId;
    private int doctorId;
    private String mark = null;
    private List<PatientListReferralBean> referralBeen;

    private Validator mValidator;
    /**
     * 创建对话用id 医生
     */
    private ArrayList<DoctorRelationshipBean> kauriIdList;
    private String mKauriHealthId;
    private List<MainPagePatientDisplayBean> MainPagePatientList;

    @Override
    protected int getActivityLayoutID() {
        return R.layout.referral_reason;
    }

    @Override
    protected void initPresenterAndView(Bundle savedInstanceState) {
        SampleApplicationLike.getApp().getComponent().inject(this);
        mPresenter.setPresenter(this);

        initNewBackBtn("转诊原因");
        tv_more.setText("确定");
    }

    @Override
    protected void initDelayedData() {
        //表单初始化
        mValidator = new Validator(this);
        mValidator.setValidationListener(this);

        Intent intent = getIntent();
        if (intent != null) {
            Bundle bundle = intent.getExtras();
            if (bundle != null) {
                kauriIdList = bundle.getParcelableArrayList(Global.Bundle.SEARCH_BUNDLE);
                mKauriHealthId = bundle.getString(Global.Bundle.REQUEST_DOCTOR);
            }
        }

        mPresenter.loadDoctorMainPage();

        EventBus.getDefault().register(this);
    }

    /**
     * 订阅事件 患者转给医生
     */
    @Subscribe(threadMode = ThreadMode.MAIN, sticky = true)
    public void eventBusMain(ReferralReasonEvent event) {
        patientId = event.getPatientId();
        doctorIdlist = event.getDoctorIdlist();
        doctorPatientRelationshipId = event.getDoctorPatientRelationshipId();
    }

    /**
     * 订阅事件 转患者
     */
    @Subscribe(threadMode = ThreadMode.MAIN, sticky = true)
    public void eventBusMain(ReferralPatientReasonEvent event) {
        doctorId = event.getDoctorId();
        referralBeen = event.getReferralBeen();
        mark = event.getStr();
    }


    @OnClick(R.id.tv_more)
    public void onConfirm() {
        mValidator.validate();
    }

    @Override
    public void switchPageUI(String className) {

    }

    @Override
    protected void onDestroy() {
        super.onDestroy();
        if (referralBeen != null) referralBeen.clear();
        if (doctorIdlist != null) doctorIdlist.clear();
        if (kauriIdList != null) kauriIdList.clear();
        removeStickyEvent(ReferralPatientReasonEvent.class);
        removeStickyEvent(ReferralReasonEvent.class);
        mPresenter.unSubscribe();
        EventBus.getDefault().unregister(this);
    }

    @Override
    public void insertPatientRequestReferralByDoctorListSucceed(ResponseDisplayBean displayBean) {
        showToast("转诊成功");
        setResult(RESULT_OK);

        if (kauriIdList != null) {
            mPresenter.createGroupChat(kauriIdList);
        } else if (mKauriHealthId != null) {//聊天
            try {
                Intent intent = new Intent();
                intent.setPackage(getApplication().getPackageName());
                intent.setAction(LCIMConstants.CONVERSATION_ITEM_CLICK_ACTION);
                intent.addCategory(Intent.CATEGORY_DEFAULT);
                intent.putExtra(LCIMConstants.PEER_ID, mKauriHealthId);
                doctorSendSticky(intent);
                startActivity(intent);
                finishCur();
            } catch (ActivityNotFoundException exception) {
                Log.i(LCIMConstants.LCIM_LOG_TAG, exception.toString());
            }
        } else {
            doctorSendSticky(null);
            partenSendSticky(null);
            finishCur();
        }
    }

    /**
     * 选医生
     *
     * @param intent
     */
    private void partenSendSticky(Intent intent) {
        Bundle bundle = new Bundle();
        if (MainPagePatientList != null && patientId != 0) {
            for (MainPagePatientDisplayBean bean : MainPagePatientList) {
                if (bean.getPatientId() == patientId) {
                    if (intent != null) {
                        bundle.putParcelable(Global.Bundle.SEARCH_PATIENT, bean);
                        intent.putExtras(bundle);
                    } else {
                        EventBus.getDefault().post(new SickCardMessageEvent(bean));
                    }
                }
            }
        }
    }

    private void doctorSendSticky(Intent intent) {
        Bundle bundle = new Bundle();
        if (MainPagePatientList != null && referralBeen != null) {
            if (referralBeen.get(0) != null) {
                for (MainPagePatientDisplayBean bean : MainPagePatientList) {
                    if (bean.getPatientId() == referralBeen.get(0).getPatientId()) {
                        if (intent != null) {
                            bundle.putParcelable(Global.Bundle.SEARCH_PATIENT, bean);
                            intent.putExtras(bundle);
                        } else {
                            EventBus.getDefault().post(new SickCardMessageEvent(bean));
                        }
                    }
                }
            }
        }
    }

    /**
     * 创建对话
     */
    @Override
    public void createGroupChatSucceed(ArrayList<String> strings) {
        if (strings != null && strings.size() > 1) {
            try {
                Intent intent = new Intent();
                intent.setPackage(getApplicationContext().getPackageName());
                intent.setAction(LCIMConstants.CONVERSATION_ITEM_CLICK_ACTION_GROUP);
                intent.addCategory(Intent.CATEGORY_DEFAULT);
                intent.putStringArrayListExtra(LCIMConstants.PEER_ID_GROUP, strings);
                partenSendSticky(intent);
                startActivity(intent);
                finishCur();
            } catch (ActivityNotFoundException exception) {
                Log.i(LCIMConstants.LCIM_LOG_TAG, exception.toString());
            }
        } else if (strings != null && strings.size() == 1) {
            try {
                Intent intent = new Intent();
                intent.setPackage(getApplication().getPackageName());
                intent.setAction(LCIMConstants.CONVERSATION_ITEM_CLICK_ACTION);
                intent.addCategory(Intent.CATEGORY_DEFAULT);
                intent.putExtra(LCIMConstants.PEER_ID, strings.get(0));
                partenSendSticky(intent);
                startActivity(intent);
                finishCur();
            } catch (ActivityNotFoundException exception) {
                Log.i(LCIMConstants.LCIM_LOG_TAG, exception.toString());
            }
        }
    }

    @Override
    public void loadDoctorMainPageSucceed(List<MainPagePatientDisplayBean> list) {
        MainPagePatientList = list;
    }

    /**
     * 得到bean 向多个医生转诊患者
     */
    @Override
    public PatientRequestReferralDoctorDisplayBean getPatientRequestReferralDoctorDisplayBean() {
        PatientRequestReferralDoctorDisplayBean referralDoctorDisplayBean = new PatientRequestReferralDoctorDisplayBean();
        PatientRequestReferralDoctorDisplayBean.DoctorListReferralBean bean = new PatientRequestReferralDoctorDisplayBean.DoctorListReferralBean();
        bean.setDoctorPatientRelationshipId(doctorPatientRelationshipId);
        bean.setPatientId(patientId);
        bean.setRequestReason(edt_referral_reason.getText().toString().trim());
        referralDoctorDisplayBean.setDoctorListId(doctorIdlist);
        referralDoctorDisplayBean.setDoctorListReferral(bean);
        return referralDoctorDisplayBean;
    }

    /**
     * 得到向医生转诊多个患者的bean
     */
    @Override
    public PatientRequestReferralPatientDisplayBean getPatientRequestBean() {
        PatientRequestReferralPatientDisplayBean displayBean = new PatientRequestReferralPatientDisplayBean();
        displayBean.setDoctorId(doctorId);
        displayBean.setRequestReason(edt_referral_reason.getText().toString().trim());
        displayBean.setPatientListReferral(referralBeen);
        return displayBean;
    }

    @Override
    public void onValidationSucceeded() {
        if (mark == null) {
            mPresenter.onSubscribe();
        } else {
            mPresenter.InsertPatientRequestReferralByPatientList();
        }
    }

    @Override
    public void onValidationFailed(List<ValidationError> errors) {
        String message = ValidatorUtils.validationErrorMessage(getApplicationContext(), errors);
        displayErrorDialog(message);
    }
}
