package com.kaurihealth.kaurihealth.record_details_v;

import android.os.Bundle;
import android.support.design.widget.TabLayout;
import android.support.v4.app.Fragment;
import android.support.v4.view.ViewPager;
import android.widget.TextView;

import com.kaurihealth.kaurihealth.R;
import com.kaurihealth.kaurihealth.adapter.MainFragmentAdapter;
import com.kaurihealth.kaurihealth.base_v.BaseActivity;
import com.kaurihealth.utilslib.constant.Global;

import java.util.ArrayList;
import java.util.List;

import butterknife.Bind;
import butterknife.OnClick;


/**
 * 病历详情-->医疗记录、健康记录、处方、长期监测指标、医疗团队
 */
public class RecordDetailsActivity extends BaseActivity {

    List<Fragment> mFragmentList = new ArrayList<>();
    @Bind(R.id.tabLayout)
    TabLayout mTabLayout;
    @Bind(R.id.vp_content)
    ViewPager mVpContent;
    @Bind(R.id.tv_more)
    TextView mTvMore;
    /**
     * 患者id
     */
    protected int mPatientId;
    /**
     * 患者性别
     */
    protected String mGender;

    private int mPosition;

    @Override
    protected int getActivityLayoutID() {
        return R.layout.activity_details;
    }

    @Override
    protected void initPresenterAndView(Bundle savedInstanceState) {
        Bundle bundle = getBundle();
        if (bundle != null) {
            mPatientId = bundle.getInt(Global.Bundle.SEARCH_PATIENT);
            mGender = bundle.getString(Global.Bundle.SEARCH_GENDER);
        }
        initNewBackBtn("病历详情");
        createCurrentFragment();
    }

    private void createCurrentFragment() {
        if (mFragmentList.size() > 0) mFragmentList.clear();
        NMedicalRecordFragment caseHistoryFragment = NMedicalRecordFragment.newInstance();
        HealthConditionFragment healthConditionFragment = HealthConditionFragment.getInstance();

        PresctiptionFragment presctiptionFragment = PresctiptionFragment.getInstance();
        LongHealthyStandardFragment healthyStandardFragment = LongHealthyStandardFragment.getInstance();
        DoctorTeamFragment doctorTeamFragment = DoctorTeamFragment.getIntance();
        FamilyMembersFragment familyMembersFragment = FamilyMembersFragment.getInstance();
//        MessageFragment messageFragment = MessageFragment.newInstance();
//        MineFragment mineFragment = MineFragment.newInstance();
//        ClinicalFragment clinicalFragment = ClinicalFragment.newInstance();

//        MineFragment mineFragment = MineFragment.newInstance();
//        RelationFragment relationFragment = RelationFragment.newInstance();
        mFragmentList.add(caseHistoryFragment);
        mFragmentList.add(healthConditionFragment);
        mFragmentList.add(presctiptionFragment);
        mFragmentList.add(healthyStandardFragment);
        mFragmentList.add(doctorTeamFragment);
        mFragmentList.add(familyMembersFragment);
    }

    @Override
    protected void initDelayedData() {
        String[] arrays = getResources().getStringArray(R.array.record_details_tab);
        initViewPager(arrays);
    }

    private void initViewPager(String[] arrays) {
        MainFragmentAdapter mainFragmentAdapter = new MainFragmentAdapter(getSupportFragmentManager(), mFragmentList, arrays);
        mVpContent.setAdapter(mainFragmentAdapter);
        mVpContent.setOffscreenPageLimit(mFragmentList.size() - 1);//设置预加载
        mVpContent.addOnPageChangeListener(new ViewPager.OnPageChangeListener() {
            @Override
            public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {

            }

            @Override
            public void onPageSelected(int position) {
                mPosition = position;
                displayView(position);
            }

            @Override
            public void onPageScrollStateChanged(int state) {
            }
        });

        //将TabLayout和ViewPager关联起来。
        mTabLayout.setupWithViewPager(mVpContent);
        //给TabLayout设置适配器
        mTabLayout.setTabsFromPagerAdapter(mainFragmentAdapter);
    }

    private void displayView(int position) {
        switch (position) {
            case 0:
                mTvMore.setText("新增");//医疗记录
                break;
            case 1:
                mTvMore.setText("保存");//健康记录
                break;
            case 2:
                mTvMore.setText("添加");//处方
                break;
            case 3:
                mTvMore.setText("添加");//长期监测指标
                break;
            case 4:
                mTvMore.setText("");//医生团队
                break;
            case 5:
                mTvMore.setText("添加");//家庭成员
                break;
        }

    }

    /**
     * 根据发送position 判断
     */
    @OnClick(R.id.tv_more)
    public void onClick() {
        showToast(getPasition()+"  getPasition");
        listener.deliverPosition(getPasition());
    }

    @Override
    protected void onDestroy() {
        super.onDestroy();
        if (!mFragmentList.isEmpty()) mFragmentList.clear();
    }

    /**
     * 提供子布局调用
     */
    public int getPatientId() {
        return mPatientId;
    }

    /**
     * 提供患者性别
     *
     * @return
     */
    public String getGender() {
        return mGender;
    }


    public int getPasition() {
        return mPosition;
    }

    public void setOnclickInterface(DeliverListener onclickInterface) {
        listener = onclickInterface;
    }

    private DeliverListener listener;

    /**
     * 给各fragment提供psition
     */
    interface DeliverListener {
        void deliverPosition(int position);
    }

}

