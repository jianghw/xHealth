package com.kaurihealth.kaurihealth.adapter;

import android.content.Context;
import android.support.v7.widget.CardView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

import com.kaurihealth.datalib.local.LocalData;
import com.kaurihealth.datalib.response_bean.DepartmentDisplayBean;
import com.kaurihealth.datalib.response_bean.DoctorDisplayBean;
import com.kaurihealth.datalib.response_bean.DoctorInformationDisplayBean;
import com.kaurihealth.datalib.response_bean.DoctorRelationshipBean;
import com.kaurihealth.kaurihealth.R;
import com.kaurihealth.utilslib.CheckUtils;
import com.kaurihealth.utilslib.image.ImageUrlUtils;
import com.kaurihealth.utilslib.widget.CircleImageView;

import java.util.List;

import butterknife.Bind;
import butterknife.ButterKnife;

/**
 * Created by mip on 2016/9/19.
 * <p/>
 * 描述：
 */
public class DoctorRequestAdapter extends CommonAdapter<DoctorRelationshipBean> {

    private ItemClickBack itemClickBack;

    public DoctorRequestAdapter(Context context, List<DoctorRelationshipBean> list) {
        super(context, list);
    }

    @Override
    public View getView(int position, View convertView, ViewGroup viewGroup) {
        if (convertView == null) {
            convertView = LayoutInflater.from(context).inflate(R.layout.doctor_request_item, null);
        }
        ViewHolder viewHolder = new ViewHolder(convertView);
        viewHolder.setInfo(list.get(position));
        return convertView;
    }

    @Override
    public boolean isItemViewTypePinned(int viewType) {
        return false;
    }

    public void setOnItemClickListener(ItemClickBack itemClickBack) {
        this.itemClickBack = itemClickBack;
    }

    class ViewHolder {
        @Bind(R.id.civPhoto)
        CircleImageView mCivPhoto;
        @Bind(R.id.tv_name)
        TextView mTvName;
        @Bind(R.id.tv_age)
        TextView mTvAge;
        @Bind(R.id.tv_type)
        TextView mTvType;
        @Bind(R.id.tv_hospital)
        TextView mTvHospital;
        @Bind(R.id.tv_refuse)
        TextView mTvRefuse;
        @Bind(R.id.tv_accept)
        TextView mTvAccept;
        @Bind(R.id.cardView)
        CardView mCardView;

        public ViewHolder(View view) {
            ButterKnife.bind(this, view);
        }

        public void setInfo(DoctorRelationshipBean bean) {
            if (bean == null) return;

            DoctorDisplayBean relatedDoctor = bean.getRelatedDoctor();
            if (relatedDoctor != null) {
                mTvName.setText(relatedDoctor.getFullName());
                DoctorInformationDisplayBean informations = relatedDoctor.getDoctorInformations();
                if(informations!=null){
                    DepartmentDisplayBean department = informations.getDepartment();
                    if(department!=null)mTvAge.setText(department.getDepartmentName());
                    mTvHospital.setText(informations.getHospitalName());
                }
                if (CheckUtils.checkUrlNotNull(relatedDoctor.avatar)) {
                    ImageUrlUtils.picassoBySmallUrlCircle(context, relatedDoctor.avatar, mCivPhoto);
                } else {
                    mCivPhoto.setImageResource(R.mipmap.ic_circle_head_green);
                }
            }
            boolean isMy = isMySend(bean);

            if (bean.getStatus().equals("等待")) {
                mTvAccept.setVisibility(isMy ? View.GONE : View.VISIBLE);
                mTvRefuse.setVisibility(isMy ? View.GONE : View.VISIBLE);
                mTvType.setText(isMy ? "待对方确认" : "待确认");
            } else if (bean.status.equals("接受")) {
                mTvAccept.setVisibility(View.GONE);
                mTvRefuse.setVisibility(View.GONE);
                mTvType.setText(isMy ? "本人已同意" : "对方已同意");
            } else {
                mTvAccept.setVisibility(View.GONE);
                mTvRefuse.setVisibility(View.GONE);
                mTvType.setText(isMy ? "本人已拒绝" : "对方已拒绝");
            }

            mTvAccept.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    itemClickBack.onItemAcceptClick(bean.getDoctorRelationshipId());
                }
            });
            mTvRefuse.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View v) {
                    itemClickBack.onItemRefuseClick(bean.getDoctorRelationshipId());
                }
            });
        }
    }

    private boolean isMySend(DoctorRelationshipBean bean) {
        int sourceDoctorId = bean.getSourceDoctorId();
        DoctorDisplayBean displayBean = LocalData.getLocalData().getMyself();
        if (displayBean == null) return false;
        int doctorId = displayBean.getDoctorId();
        return sourceDoctorId == doctorId;
    }

    public interface ItemClickBack {
        //聊天
        void onItemAcceptClick(int id);

        //添加医生
        void onItemRefuseClick(int id);
    }
}
