package com.kaurihealth.kaurihealth.manager_v;

import android.content.Context;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ListAdapter;
import android.widget.ListView;
import android.widget.TextView;

import com.kaurihealth.datalib.response_bean.PatientRecordCountDisplayBean;
import com.kaurihealth.datalib.response_bean.TotalLabTestCountsBean;
import com.kaurihealth.kaurihealth.R;
import com.kaurihealth.kaurihealth.adapter.RecordLabAdapter;
import com.kaurihealth.utilslib.controller.AbstractViewController;

import java.util.ArrayList;
import java.util.List;

import butterknife.Bind;
import butterknife.ButterKnife;
import butterknife.OnClick;

/**
 * Created by jianghw on 2016/12/15.
 * <p/>
 * Describe: 实验室检查统计
 */

class RecordLabView extends AbstractViewController<PatientRecordCountDisplayBean> implements View.OnClickListener {

    @Bind(R.id.lv_content)
    ListView mLvContent;
    @Bind(R.id.tv_history)
    TextView mTvHistory;
    @Bind(R.id.tvTitle)
    TextView mTvTitle;

    private List<TotalLabTestCountsBean> list;
    private RecordLabAdapter adapter;

    RecordLabView(Context context) {
        super(context);
    }

    @Override
    protected int getResLayoutId() {
        return R.layout.include_record_lab;
    }

    @Override
    protected void onCreateView(View view) {
        ButterKnife.bind(this, view);
        mTvTitle.setText("实验室检查");

        list = new ArrayList<>();
        adapter = new RecordLabAdapter(mContext, list);
        mLvContent.setAdapter(adapter);
    }

    @Override
    protected void bindViewData(PatientRecordCountDisplayBean data) {
        List<TotalLabTestCountsBean> labTestCounts = data.getTotalLabTestCounts();
        if (labTestCounts != null && !labTestCounts.isEmpty()) {
            stateTypeView(true);
            if (list != null && !list.isEmpty()) list.clear();
            list.addAll(labTestCounts);
            adapter.notifyDataSetChanged();

            measureListViewHeight();
        } else {
            defaultViewData();
        }
    }

    private void measureListViewHeight() {
        ListAdapter mAdapter = mLvContent.getAdapter();
        int totalHeight = 0;
        for (int i = 0; i < mAdapter.getCount(); i++) {
            View listItem = mAdapter.getView(i, null, mLvContent);
            listItem.measure(0, 0);
            totalHeight += listItem.getMeasuredHeight();
        }
        ViewGroup.LayoutParams params = mLvContent.getLayoutParams();
        params.height = totalHeight + (mLvContent.getDividerHeight() * (mAdapter.getCount() - 1));
        mLvContent.setLayoutParams(params);
    }

    @Override
    protected void defaultViewData() {
        stateTypeView(false);
    }

    @Override
    protected void unbindView() {
        if (list != null) list.clear();
        ButterKnife.unbind(this);
    }

    @OnClick({R.id.tv_history})
    public void onClick(View v) {
        switch (v.getId()) {
            case R.id.tv_history://历史记录
                break;
            default:
                break;
        }
    }

    private void stateTypeView(boolean isActive) {
        mLvContent.setVisibility(isActive ? View.VISIBLE : View.GONE);
        mTvHistory.setVisibility(isActive ? View.VISIBLE : View.GONE);
    }
}
