package com.kaurihealth.chatlib.viewholder;

import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;

import com.avos.avoscloud.im.v2.AVIMMessage;
import com.avos.avoscloud.im.v2.messages.AVIMTextMessage;
import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.reflect.TypeToken;
import com.kaurihealth.chatlib.R;
import com.kaurihealth.datalib.response_bean.OnlineMainPagePatientDisplayBean;
import com.kaurihealth.datalib.response_bean.SicknessesBean;
import com.kaurihealth.utilslib.CheckUtils;
import com.kaurihealth.utilslib.constant.Global;
import com.kaurihealth.utilslib.date.DateUtils;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.Locale;
import java.util.Map;


/**
 * Created by wli on 15/9/17.
 * 聊天页面中的病历 名片 item 对应的 holder
 */
public class LCIMChatItemSickCardHolder extends LCIMChatItemHolder {

    private RelativeLayout cardLay;
    private TextView nameTv;
    private TextView genderTv;
    private TextView ageTv;
    private TextView sicknessesTv;
    private TextView dateTv;
    private TextView typeTv;

    public LCIMChatItemSickCardHolder(Context context, ViewGroup root, boolean isLeft) {
        super(context, root, isLeft);
    }

    @Override
    public void initView() {
        super.initView();
        conventLayout.addView(View.inflate(getContext(), R.layout.lcim_chat_item_sick_card_layout, null));
        cardLay = (RelativeLayout) itemView.findViewById(R.id.lay_card);
        nameTv = (TextView) itemView.findViewById(R.id.tv_patient_name);
        genderTv = (TextView) itemView.findViewById(R.id.tv_gender);
        ageTv = (TextView) itemView.findViewById(R.id.tv_patient_age);
        sicknessesTv = (TextView) itemView.findViewById(R.id.tv_sicknesses);
        dateTv = (TextView) itemView.findViewById(R.id.tv_recordDate);
        typeTv = (TextView) itemView.findViewById(R.id.tv_recordType);
        if (isLeft) {
            cardLay.setBackgroundResource(R.drawable.other_send);
        } else {
            cardLay.setBackgroundResource(R.drawable.my_self);
        }
    }

    @Override
    public void bindData(Object o) {
        super.bindData(o);

        AVIMMessage message = (AVIMMessage) o;
        if (message instanceof AVIMTextMessage) {
            AVIMTextMessage textMessage = (AVIMTextMessage) message;

            Map<String, Object> map = textMessage.getAttrs();
            OnlineMainPagePatientDisplayBean bean = null;
            if (map != null) {
                Object object = map.get("messageContent");
                Gson gson = new GsonBuilder()
                        .setDateFormat("yyyy-MM-dd'T'HH:mm:ssZ")
                        .create();
                String stringBean = gson.toJson(object);
                if (stringBean.startsWith("[")) {
                    List<OnlineMainPagePatientDisplayBean> beanList = gson.fromJson(stringBean, new TypeToken<List<OnlineMainPagePatientDisplayBean>>() {
                    }.getType());
                    if (beanList != null && beanList.size() > 0) bean = beanList.get(0);
                } else {
                    bean = gson.fromJson(stringBean, OnlineMainPagePatientDisplayBean.class);
                }
            }

            if (bean != null) {
                nameTv.setText(CheckUtils.checkTextContent(bean.getPatientFullName()));
                genderTv.setText(CheckUtils.checkTextContent(bean.getGender()));
                SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ssZ", Locale.SIMPLIFIED_CHINESE);
                try {
                   if(bean.getDateOfBirth()!=null){
                       Date date = format.parse(bean.getDateOfBirth());
                       ageTv.setText(DateUtils.calculateAge(date) + "岁");
                   }
                } catch (Exception e) {
                    e.printStackTrace();
                }
                List<SicknessesBean> sickList = bean.getSicknesses();
                StringBuilder stringBuilder = new StringBuilder();
                if (sickList != null && !sickList.isEmpty()) {
                    for (SicknessesBean sicknessesBean : sickList) {
                        stringBuilder.append(sicknessesBean.getSicknessName());
                        stringBuilder.append("/");
                    }
                } else {
                    stringBuilder.append("暂无记录");
                    stringBuilder.append("/");
                }
                String disease = stringBuilder.toString();
                String newDis = disease.substring(0, disease.length() - 1);
                sicknessesTv.setText(CheckUtils.checkTextContent(newDis));

                dateTv.setText(CheckUtils.checkTextContent(bean.getPatientFullName()));
                typeTv.setText(CheckUtils.checkTextContent(bean.getRecordType()));

                final int mPatientId = bean.getPatientId();
                final String mGender = bean.getGender();
                cardLay.setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        try {
                            Bundle bundle = new Bundle();
                            bundle.putInt(Global.Bundle.SEARCH_PATIENT, mPatientId);
                            bundle.putString(Global.Bundle.SEARCH_GENDER, mGender);
//                            bundle.putBoolean(Global.Bundle.PATIENT_SHIP, true);
                            Intent intent = new Intent();
                            intent.setPackage(getContext().getPackageName());
                            intent.setAction("com.kaurihealth.kaurihealth.record_details_v.RecordDetailsActivity");
                            intent.addCategory(Intent.CATEGORY_DEFAULT);
                            intent.putExtras(bundle);
                            getContext().startActivity(intent);
                        } catch (Exception exception) {
                            exception.printStackTrace();
                        }
                    }
                });
            }
        }
    }
}